{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\TPA\\\\tpa_management\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setLogin\n}) => {\n  _s();\n  const cont1 = useRef();\n  const cont2 = useRef();\n  const Aname = useRef();\n  const email = useRef();\n  const [loading, setLoading] = useState(false); // State to track loading status\n\n  let generateOtp;\n  async function sendOtp() {\n    const c1 = cont1.current;\n    const c2 = cont2.current;\n\n    // Show second container and hide the first\n    c2.style.display = \"block\";\n    c1.style.display = \"none\";\n    const mail = email.current.value;\n    const name = Aname.current.value;\n    if (mail.length === 0) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n    if (name.length === 0) {\n      alert(\"Please enter your name.\");\n      return;\n    }\n\n    // Generate OTP (4-digit random number)\n    generateOtp = Math.floor(1000 + Math.random() * 9000);\n    try {\n      setLoading(true); // Start loading state\n\n      // Sending data to the server\n      const apiResponse = await fetch('/register', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          mail,\n          otp: generateOtp\n        })\n      });\n\n      // Check if the response is successful\n      if (!apiResponse.ok) {\n        throw new Error('Failed to send OTP');\n      }\n      const responseData = await apiResponse.json(); // Assuming the server returns a JSON response\n\n      console.log(\"OTP sent successfully:\", responseData);\n\n      // You can now call setLogin or other actions if needed\n      setLogin(true); // Set login state to true (you can customize this)\n\n      alert(\"OTP sent! Please check your email.\");\n    } catch (error) {\n      console.error(\"Error sending OTP:\", error);\n      alert(\"Error sending OTP. Please try again.\");\n    } finally {\n      setLoading(false); // End loading state\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: cont1,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log in here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your name\",\n          ref: Aname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your Email\",\n          ref: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"send\",\n          onClick: sendOtp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container1\",\n          id: \"container1\",\n          ref: cont2,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"OTP Varification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputsAll\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"inputs\",\n              ref: input1,\n              placeholder: \" Enter Your OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"submit\",\n            id: \"sub-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"kVEATL2Xk44uFNcZcBUStY7XEEA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","setLogin","_s","cont1","cont2","Aname","email","loading","setLoading","generateOtp","sendOtp","c1","current","c2","style","display","mail","value","name","length","alert","Math","floor","random","apiResponse","fetch","method","headers","body","JSON","stringify","otp","ok","Error","responseData","json","console","log","error","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onClick","id","input1","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/TPA/tpa_management/src/components/Login.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport \"./Login.css\";\r\n\r\nconst Login = ({ setLogin }) => {\r\n  const cont1 = useRef();\r\n  const cont2 = useRef();\r\n  const Aname = useRef();\r\n  const email = useRef();\r\n  \r\n  const [loading, setLoading] = useState(false); // State to track loading status\r\n\r\n  let generateOtp;\r\n\r\n  async function sendOtp() { \r\n    const c1 = cont1.current;\r\n    const c2 = cont2.current;\r\n\r\n    // Show second container and hide the first\r\n    c2.style.display = \"block\";\r\n    c1.style.display = \"none\";\r\n\r\n    const mail = email.current.value;\r\n    const name = Aname.current.value;\r\n\r\n    if (mail.length === 0) {\r\n      alert(\"Please enter your email.\");\r\n      return;\r\n    }\r\n\r\n    if (name.length === 0) {\r\n      alert(\"Please enter your name.\");\r\n      return;\r\n    }\r\n\r\n    // Generate OTP (4-digit random number)\r\n    generateOtp = Math.floor(1000 + Math.random() * 9000);\r\n\r\n    try {\r\n      setLoading(true); // Start loading state\r\n\r\n      // Sending data to the server\r\n      const apiResponse = await fetch('/register', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          mail,\r\n          otp: generateOtp\r\n        })\r\n      });\r\n\r\n      // Check if the response is successful\r\n      if (!apiResponse.ok) {\r\n        throw new Error('Failed to send OTP');\r\n      }\r\n\r\n      const responseData = await apiResponse.json(); // Assuming the server returns a JSON response\r\n\r\n      console.log(\"OTP sent successfully:\", responseData);\r\n      \r\n      // You can now call setLogin or other actions if needed\r\n      setLogin(true); // Set login state to true (you can customize this)\r\n\r\n      alert(\"OTP sent! Please check your email.\");\r\n\r\n    } catch (error) {\r\n      console.error(\"Error sending OTP:\", error);\r\n      alert(\"Error sending OTP. Please try again.\");\r\n    } finally {\r\n      setLoading(false); // End loading state\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"main\">\r\n      <div className=\"container\" ref={cont1}>\r\n        <h2>Log in here</h2>\r\n        <input placeholder='Enter your name' ref={Aname}/>\r\n        <input placeholder='Enter your Email' ref={email}/>\r\n        <input type=\"submit\" value=\"send\" onClick={sendOtp} />\r\n      </div>\r\n      <div>\r\n      <div className=\"container1\" id=\"container1\" ref={cont2}>\r\n        <h2>OTP Varification</h2>\r\n        <div className=\"inputsAll\">\r\n          <input type=\"number\" className=\"inputs\" ref={input1} placeholder=\" Enter Your OTP\"/>\r\n        </div>\r\n        <input type=\"submit\" value=\"submit\" id=\"sub-btn\" />\r\n      </div>\r\n    </div>\r\n  );\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}